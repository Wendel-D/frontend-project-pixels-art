{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2022-07-04T20:53:09.205Z",
    "end": "2022-07-04T20:54:33.915Z",
    "duration": 84710,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2a22ffd9-8a5c-46cc-80e8-cb990790b504",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c02dfe22-7c40-4cde-af4e-9d7c607b8ca4",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 298,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "3c2dfb43-93c7-435f-a7f5-eb34e9d1eb1c",
              "parentUUID": "c02dfe22-7c40-4cde-af4e-9d7c607b8ca4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3c2dfb43-93c7-435f-a7f5-eb34e9d1eb1c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 298,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4892ba84-d9b7-4633-aee0-7a0365a91bc9",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "timedOut": null,
              "duration": 405,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "20d66873-3ddd-4665-a38d-99db05d8fac3",
              "parentUUID": "4892ba84-d9b7-4633-aee0-7a0365a91bc9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 258,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "1f3b4bb4-01b9-4b61-a211-5eceee60e973",
              "parentUUID": "4892ba84-d9b7-4633-aee0-7a0365a91bc9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 321,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "7d89388e-b460-417e-b229-5d0cab7dc9a1",
              "parentUUID": "4892ba84-d9b7-4633-aee0-7a0365a91bc9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 253,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "09996fbc-9fb4-4c67-8b4e-57cb30aa420a",
              "parentUUID": "4892ba84-d9b7-4633-aee0-7a0365a91bc9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 152,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "30358092-ce99-459e-90c4-9125e79ee79c",
              "parentUUID": "4892ba84-d9b7-4633-aee0-7a0365a91bc9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 248,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "b6eb4c20-e807-44cc-b024-820eef800dd4",
              "parentUUID": "4892ba84-d9b7-4633-aee0-7a0365a91bc9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 245,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "03187a2f-19cb-4359-b9d2-60db3cd92078",
              "parentUUID": "4892ba84-d9b7-4633-aee0-7a0365a91bc9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "20d66873-3ddd-4665-a38d-99db05d8fac3",
            "1f3b4bb4-01b9-4b61-a211-5eceee60e973",
            "7d89388e-b460-417e-b229-5d0cab7dc9a1",
            "09996fbc-9fb4-4c67-8b4e-57cb30aa420a",
            "30358092-ce99-459e-90c4-9125e79ee79c",
            "b6eb4c20-e807-44cc-b024-820eef800dd4",
            "03187a2f-19cb-4359-b9d2-60db3cd92078"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1882,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f5a16833-384d-4828-977b-a97ea9c933b0",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 210,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "ce823ebe-c8e8-4877-ba85-db26f53fe979",
              "parentUUID": "f5a16833-384d-4828-977b-a97ea9c933b0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 389,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "ef720f39-f3e0-4726-9d80-4978b93a801b",
              "parentUUID": "f5a16833-384d-4828-977b-a97ea9c933b0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ce823ebe-c8e8-4877-ba85-db26f53fe979",
            "ef720f39-f3e0-4726-9d80-4978b93a801b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 599,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cbe733c2-ce57-492c-82bc-fb8f96e097a4",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 197,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "8a5d58c4-1842-4fb1-a6a1-a42ff9eaf7ff",
              "parentUUID": "cbe733c2-ce57-492c-82bc-fb8f96e097a4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 198,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "fcd7ecb3-a47a-47c0-9c81-aabf9269572f",
              "parentUUID": "cbe733c2-ce57-492c-82bc-fb8f96e097a4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 290,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "c548147a-0843-4286-b2c3-8b3ba5ef6803",
              "parentUUID": "cbe733c2-ce57-492c-82bc-fb8f96e097a4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 213,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "6f502215-780e-419d-955b-aac0b508d26f",
              "parentUUID": "cbe733c2-ce57-492c-82bc-fb8f96e097a4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8a5d58c4-1842-4fb1-a6a1-a42ff9eaf7ff",
            "fcd7ecb3-a47a-47c0-9c81-aabf9269572f",
            "c548147a-0843-4286-b2c3-8b3ba5ef6803",
            "6f502215-780e-419d-955b-aac0b508d26f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 898,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6f31544f-57f3-45d5-b03e-156a2404a9ed",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 519,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "3f4db379-b760-44c9-99c5-7e1da88909d3",
              "parentUUID": "6f31544f-57f3-45d5-b03e-156a2404a9ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 433,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "df702a8d-e76a-4dd7-aff4-5c05db80a63f",
              "parentUUID": "6f31544f-57f3-45d5-b03e-156a2404a9ed",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3f4db379-b760-44c9-99c5-7e1da88909d3",
            "df702a8d-e76a-4dd7-aff4-5c05db80a63f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 952,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "bd3b9692-0f5a-4f87-ba14-61de80af62f4",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 271,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "66b04c4f-cfd5-4d38-b5d6-757940c9e06f",
              "parentUUID": "bd3b9692-0f5a-4f87-ba14-61de80af62f4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 246,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "c9347d1d-f7a5-4113-929c-d56af1675485",
              "parentUUID": "bd3b9692-0f5a-4f87-ba14-61de80af62f4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "66b04c4f-cfd5-4d38-b5d6-757940c9e06f",
            "c9347d1d-f7a5-4113-929c-d56af1675485"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 517,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e8fc1173-4a27-4452-8e66-574b2312c221",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 666,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "3a2c07ac-930a-4e32-b2de-b453bb90d737",
              "parentUUID": "e8fc1173-4a27-4452-8e66-574b2312c221",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8380,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "6f68d7cb-3b03-4d77-95e7-739da20574eb",
              "parentUUID": "e8fc1173-4a27-4452-8e66-574b2312c221",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3a2c07ac-930a-4e32-b2de-b453bb90d737",
            "6f68d7cb-3b03-4d77-95e7-739da20574eb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9046,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0e5ed743-2429-4de5-af9e-51dcd31b5935",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2326,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "a1dd1c99-fac9-489f-ab86-9c5bd3e90507",
              "parentUUID": "0e5ed743-2429-4de5-af9e-51dcd31b5935",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8277,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "9785a44a-16b0-46b0-aa3d-70250194bc4d",
              "parentUUID": "0e5ed743-2429-4de5-af9e-51dcd31b5935",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1600,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "37829503-38d7-408c-bda7-afa66ec20c9c",
              "parentUUID": "0e5ed743-2429-4de5-af9e-51dcd31b5935",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a1dd1c99-fac9-489f-ab86-9c5bd3e90507",
            "9785a44a-16b0-46b0-aa3d-70250194bc4d",
            "37829503-38d7-408c-bda7-afa66ec20c9c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12203,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "287fa954-e5de-40a8-a535-fb61415bf232",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 309,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "ea5d8826-662c-4f70-9564-1b515a9c2fd0",
              "parentUUID": "287fa954-e5de-40a8-a535-fb61415bf232",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 174,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "1ab818cf-209e-4dcf-ae25-780f64c4d193",
              "parentUUID": "287fa954-e5de-40a8-a535-fb61415bf232",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 118,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "c8a8b437-b2c6-45c3-8b33-7fe8b869e4a4",
              "parentUUID": "287fa954-e5de-40a8-a535-fb61415bf232",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2360,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "5ebdbc76-f1d5-430b-b14b-11e183f4b2fd",
              "parentUUID": "287fa954-e5de-40a8-a535-fb61415bf232",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ea5d8826-662c-4f70-9564-1b515a9c2fd0",
            "1ab818cf-209e-4dcf-ae25-780f64c4d193",
            "c8a8b437-b2c6-45c3-8b33-7fe8b869e4a4",
            "5ebdbc76-f1d5-430b-b14b-11e183f4b2fd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2961,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c9e9e789-ff46-4dee-a30a-b70def51a0a0",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4398,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35709/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35709/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35709/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35709/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35709/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35709/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35709/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35709/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35709/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35709/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35709/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35709/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35709/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b4d45933-629b-4db3-bc2e-b089f358a2b0",
              "parentUUID": "c9e9e789-ff46-4dee-a30a-b70def51a0a0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4443,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:35709/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35709/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35709/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35709/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35709/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35709/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35709/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35709/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35709/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35709/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35709/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35709/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35709/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f9756b33-3a12-48ef-8d7e-82e1bf434531",
              "parentUUID": "c9e9e789-ff46-4dee-a30a-b70def51a0a0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4409,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:35709/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35709/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35709/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35709/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35709/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35709/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35709/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35709/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35709/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35709/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35709/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35709/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35709/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "07d3ceb6-8302-4e27-bc14-5480e5fb6a66",
              "parentUUID": "c9e9e789-ff46-4dee-a30a-b70def51a0a0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4495,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:35709/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35709/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35709/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35709/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35709/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35709/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35709/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35709/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35709/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35709/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35709/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35709/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35709/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "da253bb5-9af4-41c9-bdcd-4f8ec350c797",
              "parentUUID": "c9e9e789-ff46-4dee-a30a-b70def51a0a0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4402,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35709/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35709/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35709/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35709/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35709/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35709/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35709/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35709/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35709/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35709/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35709/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35709/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35709/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ee95e5d7-2e4f-4d88-af09-e20a9d7a3237",
              "parentUUID": "c9e9e789-ff46-4dee-a30a-b70def51a0a0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4383,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35709/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35709/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35709/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35709/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35709/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35709/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35709/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35709/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35709/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35709/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35709/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35709/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35709/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f5f37b23-9ab7-4ca3-b598-670447c6a433",
              "parentUUID": "c9e9e789-ff46-4dee-a30a-b70def51a0a0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4431,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:35709/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35709/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35709/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35709/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35709/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35709/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35709/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35709/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35709/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35709/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35709/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35709/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35709/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ec8f592e-08dc-49fb-8213-23e877f8eccd",
              "parentUUID": "c9e9e789-ff46-4dee-a30a-b70def51a0a0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4414,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35709/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35709/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35709/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35709/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35709/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35709/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35709/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35709/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35709/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35709/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35709/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35709/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35709/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ad32c86e-ccec-4710-bf9b-4886c517107f",
              "parentUUID": "c9e9e789-ff46-4dee-a30a-b70def51a0a0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4452,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35709/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35709/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35709/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35709/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35709/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35709/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35709/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35709/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35709/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35709/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35709/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35709/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35709/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "53f6d923-cb06-44a4-b699-84438b82b33c",
              "parentUUID": "c9e9e789-ff46-4dee-a30a-b70def51a0a0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "b4d45933-629b-4db3-bc2e-b089f358a2b0",
            "f9756b33-3a12-48ef-8d7e-82e1bf434531",
            "07d3ceb6-8302-4e27-bc14-5480e5fb6a66",
            "da253bb5-9af4-41c9-bdcd-4f8ec350c797",
            "ee95e5d7-2e4f-4d88-af09-e20a9d7a3237",
            "f5f37b23-9ab7-4ca3-b598-670447c6a433",
            "ec8f592e-08dc-49fb-8213-23e877f8eccd",
            "ad32c86e-ccec-4710-bf9b-4886c517107f",
            "53f6d923-cb06-44a4-b699-84438b82b33c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 39827,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "75c48fa8-f492-4e27-8c0e-c1cc22045515",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4392,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35709/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35709/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35709/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35709/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35709/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35709/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35709/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35709/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35709/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35709/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35709/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35709/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35709/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c1e1f732-3aa2-4c90-bef9-50d73c5fa31b",
              "parentUUID": "75c48fa8-f492-4e27-8c0e-c1cc22045515",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4361,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35709/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35709/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35709/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35709/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35709/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35709/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35709/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35709/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35709/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35709/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35709/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35709/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35709/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "8b1c92ba-e4df-466e-9a87-ba3e00143bf0",
              "parentUUID": "75c48fa8-f492-4e27-8c0e-c1cc22045515",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4378,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35709/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35709/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35709/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35709/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35709/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35709/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35709/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35709/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35709/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35709/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35709/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35709/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35709/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ce852590-1eb7-493c-ac31-174ce39ae155",
              "parentUUID": "75c48fa8-f492-4e27-8c0e-c1cc22045515",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "c1e1f732-3aa2-4c90-bef9-50d73c5fa31b",
            "8b1c92ba-e4df-466e-9a87-ba3e00143bf0",
            "ce852590-1eb7-493c-ac31-174ce39ae155"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13131,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cd916f68-b1e1-44e4-aa65-1d8321e0fd71",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 576,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:35709/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:35709/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:35709/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:35709/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:35709/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:35709/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:35709/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:35709/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35709/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35709/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:35709/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35709/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35709/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35709/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "c936e12d-ade6-4ee2-982b-d20346e03dc6",
              "parentUUID": "cd916f68-b1e1-44e4-aa65-1d8321e0fd71",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 601,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:35709/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:35709/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:35709/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:35709/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:35709/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:35709/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:35709/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:35709/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35709/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35709/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:35709/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35709/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35709/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35709/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "85a76841-4e89-455e-b646-f74cf75cac7a",
              "parentUUID": "cd916f68-b1e1-44e4-aa65-1d8321e0fd71",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "c936e12d-ade6-4ee2-982b-d20346e03dc6",
            "85a76841-4e89-455e-b646-f74cf75cac7a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1177,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}